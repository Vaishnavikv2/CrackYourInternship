**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode Sort(ListNode l1,ListNode l2){
        ListNode dummy=new ListNode(-1);
        ListNode temp=dummy;
        while(l1!=null && l2!=null){
            if(l1.val<l2.val){
                temp.next=new ListNode(l1.val);
                l1=l1.next;
                temp=temp.next;
            }
            else{
             temp.next=new ListNode(l2.val);
                l2=l2.next;
                temp=temp.next;
            }  
        }
        while(l1!=null){
            temp.next=new ListNode(l1.val);
                l1=l1.next;
                temp=temp.next;
        }
        while(l2!=null){
            temp.next=new ListNode(l2.val);
                l2=l2.next;
                temp=temp.next;
        }
        return dummy.next;
    }
    public ListNode sortList(ListNode head) {
        if(head==null || head.next==null){
            return head;
        }
        ListNode slow=head;
        ListNode fast=head;
        ListNode prev=head;
        while(fast!=null && fast.next!=null){
          prev=slow;
          slow=slow.next;
          fast=fast.next.next;
        }
        prev.next=null;
       return Sort(sortList(head),sortList(slow));
    }
}
