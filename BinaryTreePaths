/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String>res=new ArrayList<>();
        StringBuilder str=new StringBuilder();
        if(root==null) return res;
        Rec(root,res,str);
        return res;
    } 
    public void Rec(TreeNode root,List<String>res,StringBuilder str){
        if(root==null) return;
        if(root.left!=null || root.right!=null){
        str.append(root.val).append("->");
       }
        if(root.left==null && root.right==null){
            str.append(root.val);
            res.add(str.toString());
        }
            Rec(root.left,res,new StringBuilder(str));
            Rec(root.right,res,new StringBuilder(str));
        

    }
}
