class Solution {
    public void Combinations(int ind,int[] arr,int target,List<List<Integer>>res,List<Integer>ds){
       if(target==0){
        res.add(new ArrayList<>(ds));
        return;
       }
       for(int i=ind;i<arr.length;i++){
        if(i>ind && arr[i]==arr[i-1]) continue;
        if(arr[i]>target) break;
        ds.add(arr[i]);
        Combinations(i+1,arr,target-arr[i],res,ds);
        ds.remove(ds.size()-1);
       }

    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>>res=new ArrayList<>();
        Combinations(0,candidates,target,res,new ArrayList<>());
        return res;
    }
}
