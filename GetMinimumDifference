/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode prev=null;
    public void Rec(TreeNode root,int[] mini){
        if(root==null) return;
      Rec(root.left,mini);
      if(prev!=null){
        mini[0]=Math.min(mini[0],root.val-prev.val);
      }
      prev=root;
      Rec(root.right,mini);
    
    }
    public int getMinimumDifference(TreeNode root) {
        if(root==null) return 0;
        int[] mini=new int[1];
        mini[0]=Integer.MAX_VALUE;
        Rec(root,mini);
        return mini[0]; 
    }
}
