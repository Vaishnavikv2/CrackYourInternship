//{ Driver Code Starts
//Initial Template for Java


import java.util.*;
import java.io.*;
import java.lang.*;

class Driver
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        
        while(t-- > 0)
        {
            int n = Integer.parseInt(read.readLine());
            String str[] = read.readLine().trim().split(" ");
            
            int arr[] = new int[n];
            for(int i = 0; i < n; i++)
                arr[i] = Integer.parseInt(str[i]);
                
            Solution obj = new Solution();
            obj.radixSort(arr, n);
            for(int i = 0; i < n; i++)
                System.out.print(arr[i] + " ");
                
            System.out.println();
        }
    }
}


// } Driver Code Ends


//User function Template for Java


class Solution
{   static int getMax(int [] arr,int n){
    int maxi=0;
    for(int i=0;i<n;i++){
        if(arr[i]>maxi)
        {
            maxi=arr[i];
        }
    }
    return maxi;
}

static void countsort(int[] arr,int n,int ex){
    int max=getMax(arr,n);
    int[] count=new int[10];
    for(int num:arr){
        count[(num/ex)%10]++;
    }
    for(int i=1;i<10;i++){
        count[i]=count[i-1]+count[i];
    }
    int[] output=new int[n];
    for(int i=n-1;i>=0;i--){
        output[count[(arr[i] / ex) % 10]-1]=arr[i];
        count[(arr[i]/ex)%10]--;
    }
    for(int i = 0; i < n; i++) {
            arr[i] = output[i];
        }
}
    static void radixSort(int arr[], int n) 
    { 
       int max=getMax(arr,n);
       for(int ex=1;max/ex>0;ex=ex*10){
           countsort(arr,n,ex);
       }
    } 
}

